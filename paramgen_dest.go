// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-connector-sdk/tree/main/cmd/paramgen

package http

import (
	sdk "github.com/conduitio/conduit-connector-sdk"
)

func (DestinationConfig) Parameters() map[string]sdk.Parameter {
	return map[string]sdk.Parameter{
		"headers": {
			Default:     "",
			Description: "Http headers to use in the request, comma separated list of : separated pairs",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"method": {
			Default:     "POST",
			Description: "Http method to use in the request",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationInclusion{List: []string{"POST", "PUT", "DELETE", "PATCH"}},
			},
		},
		"params.*": {
			Default:     "",
			Description: "parameters to use in the request, use params.* as the config key and specify its value, ex: set \"params.id\" as \"1\".",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"url": {
			Default:     "",
			Description: "url is a Go template expression for the url used in the HTTP request, using Go [templates](https://pkg.go.dev/text/template). The value provided to the template is [sdk.Record](https://github.com/ConduitIO/conduit-connector-sdk/blob/bfc1d83eb75460564fde8cb4f8f96318f30bd1b4/record.go#L81), so the template has access to all its fields (e.g. .Position, .Key, .Metadata, and so on). We also inject all template functions provided by [sprig](https://masterminds.github.io/sprig/) to make it easier to write templates.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
	}
}
