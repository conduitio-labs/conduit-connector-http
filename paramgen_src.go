// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-connector-sdk/tree/main/cmd/paramgen

package http

import (
	sdk "github.com/conduitio/conduit-connector-sdk"
)

func (SourceConfig) Parameters() map[string]sdk.Parameter {
	return map[string]sdk.Parameter{
		"headers": {
			Default:     "",
			Description: "Http headers to use in the request, comma separated list of : separated pairs",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"method": {
			Default:     "GET",
			Description: "Http method to use in the request",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationInclusion{List: []string{"GET", "HEAD", "OPTIONS"}},
			},
		},
		"params": {
			Default:     "",
			Description: "parameters to use in the request, comma separated list of : separated pairs",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"pollingPeriod": {
			Default:     "5m",
			Description: "how often the connector will get data from the url",
			Type:        sdk.ParameterTypeDuration,
			Validations: []sdk.Validation{},
		},
		"script.getRequestData": {
			Default:     "",
			Description: "The path to a .js file containing the code to prepare the request data. The signature of the function needs to be: `function getRequestData(cfg, previousResponse, position)` where: * `cfg` (a map) is the connector configuration * `previousResponse` (a map) contains data from the previous response (if any), returned by `parseResponse` * `position` (a byte array) contains the starting position of the connector. The function needs to return a Request object.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"script.parseResponse": {
			Default:     "",
			Description: "The path to a .js file containing the code to parse the response. The signature of the function needs to be: `function parseResponse(bytes)` where `bytes` are the original response's raw bytes (i.e. unparsed). The response should be a Response object.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"url": {
			Default:     "",
			Description: "Http url to send requests to",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
	}
}
